{"trial_id": "3", "hyperparameters": {"space": [{"class_name": "Int", "config": {"name": "num_layers", "default": null, "conditions": [], "min_value": 2, "max_value": 7, "step": 1, "sampling": "linear"}}, {"class_name": "Int", "config": {"name": "#CNN layer0", "default": null, "conditions": [], "min_value": 240, "max_value": 300, "step": 10, "sampling": "linear"}}, {"class_name": "Choice", "config": {"name": "activation_function 0", "default": "relu", "conditions": [], "values": ["relu", "sigmoid", "tanh"], "ordered": false}}, {"class_name": "Choice", "config": {"name": "drop_prob 1", "default": 0.2, "conditions": [], "values": [0.2, 0.3, 0.4, 0.5], "ordered": true}}, {"class_name": "Int", "config": {"name": "#CNN layer1", "default": null, "conditions": [], "min_value": 72, "max_value": 120, "step": 8, "sampling": "linear"}}, {"class_name": "Choice", "config": {"name": "activation_function 1", "default": "relu", "conditions": [], "values": ["relu", "sigmoid", "tanh"], "ordered": false}}, {"class_name": "Choice", "config": {"name": "drop_prob 2", "default": 0.2, "conditions": [], "values": [0.2, 0.3, 0.4, 0.5], "ordered": true}}, {"class_name": "Choice", "config": {"name": "optmz", "default": "adam", "conditions": [], "values": ["adam", "adaDelta", "adaGrad"], "ordered": false}}, {"class_name": "Choice", "config": {"name": "loss f", "default": "mse", "conditions": [], "values": ["mse", "mae"], "ordered": false}}, {"class_name": "Int", "config": {"name": "#CNN layer2", "default": null, "conditions": [], "min_value": 72, "max_value": 120, "step": 8, "sampling": "linear"}}, {"class_name": "Choice", "config": {"name": "activation_function 2", "default": "relu", "conditions": [], "values": ["relu", "sigmoid", "tanh"], "ordered": false}}, {"class_name": "Int", "config": {"name": "#CNN layer3", "default": null, "conditions": [], "min_value": 72, "max_value": 120, "step": 8, "sampling": "linear"}}, {"class_name": "Choice", "config": {"name": "activation_function 3", "default": "relu", "conditions": [], "values": ["relu", "sigmoid", "tanh"], "ordered": false}}, {"class_name": "Int", "config": {"name": "#CNN layer4", "default": null, "conditions": [], "min_value": 72, "max_value": 120, "step": 8, "sampling": "linear"}}, {"class_name": "Choice", "config": {"name": "activation_function 4", "default": "relu", "conditions": [], "values": ["relu", "sigmoid", "tanh"], "ordered": false}}], "values": {"num_layers": 7, "#CNN layer0": 240, "activation_function 0": "sigmoid", "drop_prob 1": 0.5, "#CNN layer1": 72, "activation_function 1": "tanh", "drop_prob 2": 0.5, "optmz": "adaDelta", "loss f": "mae", "#CNN layer2": 72, "activation_function 2": "relu", "#CNN layer3": 96, "activation_function 3": "tanh", "#CNN layer4": 120, "activation_function 4": "sigmoid"}}, "metrics": {"metrics": {}}, "score": null, "best_step": 0, "status": "FAILED", "message": "Traceback (most recent call last):\n  File \"c:\\Users\\USER\\Music\\DeepL\\myenvdeep\\Lib\\site-packages\\keras_tuner\\src\\engine\\base_tuner.py\", line 274, in _try_run_and_update_trial\n    self._run_and_update_trial(trial, *fit_args, **fit_kwargs)\n  File \"c:\\Users\\USER\\Music\\DeepL\\myenvdeep\\Lib\\site-packages\\keras_tuner\\src\\engine\\base_tuner.py\", line 239, in _run_and_update_trial\n    results = self.run_trial(trial, *fit_args, **fit_kwargs)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\USER\\Music\\DeepL\\myenvdeep\\Lib\\site-packages\\keras_tuner\\src\\engine\\tuner.py\", line 314, in run_trial\n    obj_value = self._build_and_fit_model(trial, *args, **copied_kwargs)\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\USER\\Music\\DeepL\\myenvdeep\\Lib\\site-packages\\keras_tuner\\src\\engine\\tuner.py\", line 232, in _build_and_fit_model\n    model = self._try_build(hp)\n            ^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\USER\\Music\\DeepL\\myenvdeep\\Lib\\site-packages\\keras_tuner\\src\\engine\\tuner.py\", line 164, in _try_build\n    model = self._build_hypermodel(hp)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\USER\\Music\\DeepL\\myenvdeep\\Lib\\site-packages\\keras_tuner\\src\\engine\\tuner.py\", line 155, in _build_hypermodel\n    model = self.hypermodel.build(hp)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\USER\\AppData\\Local\\Temp\\ipykernel_20452\\1350196508.py\", line 22, in build_model\n    model.add(Conv1D(filters=parameters.Int('#CNN layer' + str(i),min_value=72,max_value=120,step=8),\n  File \"c:\\Users\\USER\\Music\\DeepL\\myenvdeep\\Lib\\site-packages\\keras\\src\\models\\sequential.py\", line 120, in add\n    self._maybe_rebuild()\n  File \"c:\\Users\\USER\\Music\\DeepL\\myenvdeep\\Lib\\site-packages\\keras\\src\\models\\sequential.py\", line 139, in _maybe_rebuild\n    self.build(input_shape)\n  File \"c:\\Users\\USER\\Music\\DeepL\\myenvdeep\\Lib\\site-packages\\keras\\src\\layers\\layer.py\", line 223, in build_wrapper\n    original_build_method(*args, **kwargs)\n  File \"c:\\Users\\USER\\Music\\DeepL\\myenvdeep\\Lib\\site-packages\\keras\\src\\models\\sequential.py\", line 183, in build\n    x = layer(x)\n        ^^^^^^^^\n  File \"c:\\Users\\USER\\Music\\DeepL\\myenvdeep\\Lib\\site-packages\\keras\\src\\utils\\traceback_utils.py\", line 122, in error_handler\n    raise e.with_traceback(filtered_tb) from None\n  File \"c:\\Users\\USER\\Music\\DeepL\\myenvdeep\\Lib\\site-packages\\keras\\src\\ops\\operation_utils.py\", line 221, in compute_conv_output_shape\n    raise ValueError(\nValueError: Computed output size would be negative. Received `inputs shape=(None, 1, 96)`, `kernel shape=(3, 96, 120)`, `dilation_rate=[1]`.\n"}